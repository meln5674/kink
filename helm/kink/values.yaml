# Default values for kink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/meln5674/kink
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

kubelet:
  persistence:
    enabled: false
    size: 8Gi
    accessModes:
    - ReadWriteOnce
    storageClassName: 

extraEnv: []
extraArgs: []
extraVolumes: []
extraVolumeMounts: []

controlplane:
  replicaCount: 1
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  extraLabels: {}

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    api:
      port: 6443
    kubelet-metrics:
      port: 10250
    etcd-client:
      port: 2379
    etcd-peer:
      port: 2380
    rke2-discover:
      port: 9345

    
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistence:
    enabled: false
    size: 8Gi
    accessModes:
    - ReadWriteOnce
    storageClassName: 
    # Additional places to mount the shared /etc/rancher and /var/lib/rancher volume to
    # Uses the same directory for both mountPath and subPath
    extraMounts: []

  # If true, will taint controlplane nodes with node-role.kubernetes.io/control-plane=true:NoSchedule
  defaultTaint: true
  extraTaints: [] # { key: "", value: "", effect: "" }

  extraEnv: []
  extraArgs: []
  extraVolumes: []
  extraVolumeMounts: []

worker:
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  extraLabels: {}

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    kubelet-metrics:
      port: 10250
  extraPorts:
  - name: http
    port: 80
    protocol: TCP
  - name: https
    port: 443
    protoco: TCP

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # TODO
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistence:
    enabled: false
    size: 8Gi
    accessModes:
    - ReadWriteOnce
    storageClassName: 
    extraMounts:
    - /opt/local-path-provisioner

  extraEnv: []
  extraArgs: []
  extraVolumes: []
  extraVolumeMounts: []

# If enabled, an additional deployment will be created which watches the guest cluster
#   for NodePort and LoadBalancer type services, and dynamically manages a service on
#   the host cluster named {{ fullname }}-lb with the same ports
loadBalancer:
  enabled: false
  labels: []
  service:
    annotations: {}
  manager:
    replicaCount: 1
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    rbac:
      # If true, create a role and rolebinding to provide access to the dynamic service
      create: true

    extraLabels: {}

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

    extraEnv: []
    extraArgs: []
    extraVolumes: []
    extraVolumeMounts: []

# If enabled, run a hook job to create a secret containing a kubeconfig usable by mounting within another pod
kubeconfig:
  enabled: false
  labels: []
  job:
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    rbac:
      # If true, create a role and rolebinding to provide access to the dynamic service
      create: true

    extraLabels: {}

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

    extraEnv: []
    extraArgs: []
    extraVolumes: []
    extraVolumeMounts: []




sharedPersistence:
  enabled: false
  size: 8Gi
  accessModes:
  - ReadWriteOnce
  storageClassName:
  mounts:
  - /opt/shared-local-path-provisioner

token:
  value: my-secret-token
  existingSecret:
    name:
    tokenKey: token

clusterDomain: cluster.local

rke2:
  enabled: false

iptables:
  useLegacy: false
