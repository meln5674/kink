{{- $k8sBin := "k3s" }}
{{- $etcDir := "/etc/rancher/k3s" }}
{{- $dataDir := "/var/lib/rancher/k3s" }}
{{- $tokenVar := "K3S_TOKEN" }}
{{- $extraManifestsDir := "k3s" }}
{{- if .Values.rke2.enabled }}
{{- $etcDir = "/etc/rancher/rke2" }}
{{- $k8sBin = "rke2" }}
{{- $dataDir = "/var/lib/rancher/rke2" }}
{{- $tokenVar = "RKE2_TOKEN" }}
{{- $extraManifestsDir = "rke2" }}
{{- end }}
{{- $registryIx := dict }}
{{- $tlsMounted := list }}
{{- $authMounted := list }}
{{- $ix := 0 }}
{{- range $k, $v := .Values.registries.configs }}
{{- $registryIx = set $registryIx $k $ix }}
{{- $ix = add $ix 1 }}
{{- if $v.auth }}
{{- if $v.auth.volume }}
{{- $authMounted = append $authMounted $k }}
{{- end }}
{{- end }}
{{- if $v.tls }}
{{- if $v.tls.volume }}
{{- $tlsMounted = append $tlsMounted $k }}
{{- end }}
{{- end }}
{{- end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kink.worker.fullname" . }}
  labels:
    {{- include "kink.worker.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kink.worker.fullname" . }}
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      {{- include "kink.worker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kink.worker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kink.worker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: '{{ $tokenVar }}'
            valueFrom:
              secretKeyRef:
                {{- if .Values.token.existingSecret.name }}
                name: {{ .Values.token.existingSecret.name }}
                key:  {{ .Values.token.existingSecret.key }}
                {{- else }}
                name: {{ include "kink.fullname" . }}
                key: token
                {{- end }}
          {{- with .Values.extraEnv }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          {{- with .Values.worker.extraEnv }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          command: [kink, init]
          args:
          {{- include "kink.initArgsAll" (list . $dataDir $etcDir $authMounted $tlsMounted) | nindent 10 }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: '{{ $dataDir }}'
            subPath: '{{ $dataDir | trimPrefix "/" }}'
          - name: data
            mountPath: /etc/rancher
            subPath: etc/rancher
          {{- include "kink.registryMountsInit" (list . $registryIx $etcDir) | nindent 10 }}
          - name: kubelet
            mountPath: /var/lib/kubelet
            subPath: var/lib/kubelet
          {{- range .Values.worker.persistence.extraMounts }}
          - name: data
            mountPath: /{{ . | trimPrefix "/" }}
            subPath: {{ . | trimPrefix "/" }}
          {{- end }}
          {{- if or .Values.sharedPersistence.enabled .Values.sharedPersistence.enabledWithoutStorage }}
          {{- range .Values.sharedPersistence.mounts }}
          - name: shared-data
            mountPath: /{{ . | trimPrefix "/" }}
            subPath: {{ . | trimPrefix "/" }}
          {{- end }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          {{- with .Values.worker.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}


      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: '{{ $tokenVar }}'
            valueFrom:
              secretKeyRef:
                {{- if .Values.token.existingSecret.name }}
                name: {{ .Values.token.existingSecret.name }}
                key:  {{ .Values.token.existingSecret.key }}
                {{- else }}
                name: {{ include "kink.fullname" . }}
                key: token
                {{- end }}
          {{- with .Values.extraEnv }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          {{- with .Values.worker.extraEnv }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          command:
          - sh
          - -cxe
          - |-
            {{- if .Values.iptables.useLegacy }}
            update-alternatives --set iptables /usr/sbin/iptables-legacy
            update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
            {{- end }}
            exec '{{ $k8sBin }}' "$0" "$@"
          args:
          - agent
          - '--server={{ include "kink.controlplane.url" . }}'
          {{- with .Values.extraArgs }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          {{- with .Values.worker.extraArgs }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          ports:
            - name: kubelet-metrics
              containerPort: 10250
              protocol: TCP
            - name: health
              containerPort: 10248
              protocol: TCP
            {{- range .Values.worker.extraPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
            {{- end }}
            {{- if .Values.loadBalancer.ingress.enabled }}
            {{- range .Values.loadBalancer.ingress.classMappings }}
            {{- with .hostPort }}
            {{- with .httpPort }}
            - containerPort: {{ . }}
            {{- end }}
            {{- with .httpsPort }}
            - containerPort: {{ . }}
            {{- end }}
              protocol: TCP
            {{- end }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
              host: 127.0.0.1
          readinessProbe:
            httpGet:
              path: /healthz
              port: health
              host: 127.0.0.1
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: '{{ $dataDir }}'
            subPath: '{{ $dataDir | trimPrefix "/" }}'
          - name: data
            mountPath: /etc/rancher
            subPath: etc/rancher
          {{- include "kink.registryMounts" (list . $registryIx) | nindent 10 }}
          - name: kubelet
            mountPath: /var/lib/kubelet
            subPath: var/lib/kubelet
          {{- range .Values.worker.persistence.extraMounts }}
          - name: data
            mountPath: /{{ . }}
            subPath: {{ . | trimPrefix "/" }}
          {{- end }}
          {{- if .Values.sharedPersistence.enabled }}
          {{- range .Values.sharedPersistence.mounts }}
          - name: shared-data
            mountPath: /{{ . }}
            subPath: {{ . | trimPrefix "/" }}
          {{- end }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
          {{- with .Values.worker.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- include "kink.registryVolumes" (list . $registryIx) | nindent 6 }}
      {{- if not .Values.kubelet.persistence.enabled }}
      - name: kubelet
        emptyDir: {}
      {{- end }}
      {{- if not .Values.worker.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end }}
      - name: shared-data
      {{- if .Values.sharedPersistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "kink.fullname" . }}-shared
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.extraVolumes }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      {{- with .Values.worker.extraVolumes }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      {{- with .Values.worker.extraPodSpec }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if .Values.worker.persistence.enabled }}
  - metadata:
      name: data
    spec:
      accessModes: {{ .Values.worker.persistence.accessModes | toJson }}
      {{- with .Values.worker.persistence.storageClassName }}
      storageClassName: '{{ . }}'
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.worker.persistence.size }}
  {{- end }}
  {{- if .Values.kubelet.persistence.enabled }}
  - metadata:
      name: kubelet
    spec:
      accessModes: {{ .Values.kubelet.persistence.accessModes | toJson }}
      {{- with .Values.kubelet.persistence.storageClassName }}
      storageClassName: '{{ . }}'
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.kubelet.persistence.size }}
  {{- end }}
  {{- with .Values.worker.extraControllerSpec }}
  {{- . | toYaml | nindent 2 }}
  {{- end }}

