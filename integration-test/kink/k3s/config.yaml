apiVersion: kink.meln5674.github.com/v0
kind: Config
kubernetes:
  context:
    namespace: k3s
kubectl:
  command: [bin/kubectl]
helm:
  command: [bin/helm]
release:
  upgradeFlags:
  - --timeout=1h
  - --create-namespace
  set:
    image.pullPolicy: Never
    controlplane.securityContext.privileged: "true"
    worker.securityContext.privileged: "true"
    controlplane.replicaCount: "1"
    worker.replicaCount: "2"
    controlplane.persistence.enabled: "true"
    worker.persistence.enabled: "true"
    sharedPersistence.enabled: "true"
    sharedPersistence.storageClassName: "shared-local-path"
    fileGateway.enabled: "true"
    fileGateway.ingress.enabled: "true"
    fileGateway.ingress.hosts[0]: "k3s-file-gateway.cluster.local"
    fileGateway.ingress.tls[0].hosts[0]: "k3s-file-gateway.cluster.local"
    controlplane.extraEnv[0].name: qux
    controlplane.extraEnv[0].value: quux
    workers.extraEnv[0].name: quuux
    workers.extraEnv[0].value: quuuux
    controlplane.extraVolumes[0].name: bar
    controlplane.extraVolumes[0].emptyDir.medium: ""
    workers.extraVolumes[0].name: baz
    workers.extraVolumes[0].emptyDir.medium: ""
    controlplane.extraVolumeMounts[0].name: bar
    controlplane.extraVolumeMounts[0].mountPath: /tmp/bar
    workers.extraVolumeMounts[0].name: baz
    workers.extraVolumeMounts[0].mountPath: /tmp/baz
    extraArgs[0]: -v
    controlplane.extraArgs[0]: '--debug'
    controlplane.extraArgs[1]: '--disable=traefik'
    controlplane.extraArgs[2]: '--disable=servicelb'
    workers.extraArgs[0]: '--node-label=foo=bar'
    loadBalancer.enabled: 'true'
    loadBalancer.service.type: 'NodePort'
    kubeconfig.enabled: 'true'

    loadBalancer.ingress.enabled: 'true'
    loadBalancer.ingress.classMappings[0].guestClassName: nginx
    loadBalancer.ingress.classMappings[0].className: nginx
    loadBalancer.ingress.classMappings[0].nodePort.namespace: default
    loadBalancer.ingress.classMappings[0].nodePort.name: ingress-nginx-controller
    loadBalancer.ingress.classMappings[0].nodePort.httpPort: http
    loadBalancer.ingress.static[0].className: nginx
    loadBalancer.ingress.static[0].hosts[0].host: smoke-test.k3s.ingress.outer
    loadBalancer.ingress.static[0].hosts[0].paths[0].path: /
    loadBalancer.ingress.static[0].hosts[0].paths[0].pathType: Prefix
    loadBalancer.ingress.static[0].nodePort.namespace: default
    loadBalancer.ingress.static[0].nodePort.name: k8s-smoke-test-statefulset
    loadBalancer.ingress.static[0].nodePort.port: http


    'registries.mirrors.docker\.io.endpoint[0]': https://secure-proxy-registry.default:5000
    'registries.mirrors.registry-1\.docker\.io.endpoint[0]': https://secure-proxy-registry.default:5000
    'registries.mirrors.index\.docker\.io.endpoint[0]': https://secure-proxy-registry.default:5000
    'registries.configs.secure-proxy-registry\.default:5000.tls.volume.secret.secretName': secure-proxy-registry-cert
    'registries.configs.secure-proxy-registry\.default:5000.tls.ca_file': ca.crt
    'registries.configs.secure-proxy-registry\.default:5000.auth.username': totally-secure-username
    'registries.configs.secure-proxy-registry\.default:5000.auth.password': totally-secure-password
  setString:
    extraArgs[1]: '1'
